# Set up the Postgres role first:
#   `createuser -s future-perfect`
#   `psql`
#   `\password future-perfect`

default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: future-perfect_development
  username: future-perfect
  password: <%= ENV['FUTURE_PERFECT_DATABASE_PASSWORD'] %>
  port: 5432

#test:
#  <<: *default
#  database: future-perfect_test

#test:
#  adapter: sqlite3
#  database: ":memory:"

test:
  adapter: nulldb

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: future-perfect_production
  username: future-perfect
  password: <%= ENV['FUTURE_PERFECT_DATABASE_PASSWORD'] %>
